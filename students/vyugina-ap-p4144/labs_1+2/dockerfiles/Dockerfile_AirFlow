FROM python:3.12-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    AIRFLOW_HOME=/app/airflow

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    curl \
    libpq-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - \
    && ln -s /root/.local/bin/poetry /usr/local/bin/

# Set working directory
WORKDIR /app

COPY pyproject.toml poetry.lock README.md ./

# Configure poetry to not create a virtual environment
RUN poetry config virtualenvs.create false

# Install dependencies
RUN poetry install --no-interaction --no-ansi --no-root

# Copy the entire project first to ensure README.md is available
COPY . ./

# Set the PYTHONPATH to include the project directory
ENV PYTHONPATH=/app:$PYTHONPATH \
    AIRFLOW__CORE__DAGS_FOLDER=/app/mlops/dags

# Initialize the database
RUN poetry run airflow db init

# Create admin user if it doesn't exist
RUN poetry run airflow users create \
    --username admin \
    --firstname Admin \
    --lastname User \
    --role Admin \
    --email admin@example.com \
    --password admin

# Create a symlink to the dags folder
RUN ln -sf /app/mlops/dags /app/airflow/dags

# Expose the webserver port
EXPOSE 8080

CMD ["poetry", "run", "airflow", "webserver", "--port", "8080"]
